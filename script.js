const colors = ['red', 'yellow', 'green'];
const colorNames = {
    red: { name: '–ß–µ—Ä–≤–æ–Ω–∏–π', icon: 'üî¥', message: '–°–¢–û–ü!' },
    yellow: { name: '–ñ–æ–≤—Ç–∏–π', icon: 'üü°', message: '–£–í–ê–ì–ê!' },
    green: { name: '–ó–µ–ª–µ–Ω–∏–π', icon: 'üü¢', message: '–ô–î–Ü–¢–¨!' }
};

let currentColorIndex = 0;
let autoModeInterval = null; 
let isAutoMode = false; 


function switchLight() {    
    const currentLight = document.getElementById(colors[currentColorIndex] + 'Light');
    currentLight.classList.remove('active');
    
    currentColorIndex = (currentColorIndex + 1) % colors.length;
    
    const newLight = document.getElementById(colors[currentColorIndex] + 'Light');
    newLight.classList.add('active');
    
    updateStatus();
    
}

function updateStatus() {
    const status = document.getElementById('status');
    const currentColor = colors[currentColorIndex];
    const colorInfo = colorNames[currentColor];
    
    status.innerHTML = `${colorInfo.icon} ${colorInfo.name} - ${colorInfo.message}`;
    
    status.style.transform = 'scale(1.05)';
    setTimeout(() => {
        status.style.transform = 'scale(1)';
    }, 200);
}

function startAutoMode() {
    if (isAutoMode) return; 
    
    isAutoMode = true;
    autoModeInterval = setInterval(switchLight, 3000);
    
    const autoBtn = document.getElementById('autoToggle');
    if (autoBtn) {
        autoBtn.textContent = '‚èπÔ∏è –ó—É–ø–∏–Ω–∏—Ç–∏ –∞–≤—Ç–æ-—Ä–µ–∂–∏–º';
        autoBtn.classList.add('active');
    }
}

function stopAutoMode() {
    if (!isAutoMode) return; 
    
    clearInterval(autoModeInterval);
    isAutoMode = false;
    autoModeInterval = null;
    
    const autoBtn = document.getElementById('autoToggle');
    if (autoBtn) {
        autoBtn.textContent = 'ü§ñ –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –∞–≤—Ç–æ-—Ä–µ–∂–∏–º';
        autoBtn.classList.remove('active');
    }
}


function toggleAutoMode() {
    if (isAutoMode) {
        stopAutoMode();
    } else {
        startAutoMode();
    }
}

function handleKeyPress(event) {
    switch(event.code) {
        case 'Space':
            event.preventDefault();
            if (!isAutoMode) { 
                switchLight();
            }
            break;
        case 'KeyA':
            event.preventDefault();
            toggleAutoMode();
            break;
        case 'KeyR':
            event.preventDefault();
            resetToRed();
            break;
    }
}

function resetToRed() {
    
    const currentLight = document.getElementById(colors[currentColorIndex] + 'Light');
    currentLight.classList.remove('active');
    
    currentColorIndex = 0;
    const redLight = document.getElementById('redLight');
    redLight.classList.add('active');
    
    updateStatus();
}

function addAutoModeButton() {
    const controlPanel = document.querySelector('.control-panel');
    
    const autoToggleBtn = document.createElement('button');
    autoToggleBtn.id = 'autoToggle';
    autoToggleBtn.className = 'auto-toggle';
    autoToggleBtn.textContent = 'ü§ñ –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –∞–≤—Ç–æ-—Ä–µ–∂–∏–º';
    autoToggleBtn.onclick = toggleAutoMode;
    
    controlPanel.appendChild(autoToggleBtn);
}

function updateInstructions() {
    const instructions = document.querySelector('.instructions');
    if (instructions) {
        instructions.innerHTML = `
            <h3>üìã –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó:</h3>
            <p>üî¥ <strong>–ß–µ—Ä–≤–æ–Ω–∏–π</strong> - –°–¢–û–ü! –†—É—Ö –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–∏–π</p>
            <p>üü° <strong>–ñ–æ–≤—Ç–∏–π</strong> - –£–í–ê–ì–ê! –ü—Ä–∏–≥–æ—Ç—É–≤–∞—Ç–∏—Å—è</p>
            <p>üü¢ <strong>–ó–µ–ª–µ–Ω–∏–π</strong> - –ô–î–Ü–¢–¨! –†—É—Ö –¥–æ–∑–≤–æ–ª–µ–Ω–∏–π</p>
            <p><strong>–ö–µ—Ä—É–≤–∞–Ω–Ω—è:</strong></p>
            <p>üñ±Ô∏è –ö–Ω–æ–ø–∫–∞ "–ù–∞—Å—Ç—É–ø–Ω–∏–π –∫–æ–ª—ñ—Ä" - —Ä—É—á–Ω–µ –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è</p>
            <p>‚å®Ô∏è <strong>–ü—Ä–æ–±—ñ–ª</strong> - –ø–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —Å–≤—ñ—Ç–ª–æ—Ñ–æ—Ä–∞</p>
            <p>‚å®Ô∏è <strong>A</strong> - —É–≤—ñ–º–∫–Ω—É—Ç–∏/–≤–∏–º–∫–Ω—É—Ç–∏ –∞–≤—Ç–æ-—Ä–µ–∂–∏–º</p>
            <p>‚å®Ô∏è <strong>R</strong> - —Å–∫–∏–Ω—É—Ç–∏ –¥–æ —á–µ—Ä–≤–æ–Ω–æ–≥–æ –∫–æ–ª—å–æ—Ä—É</p>
        `;
    }
}

function initTrafficLight() {
    console.log('üöÄ –°–≤—ñ—Ç–ª–æ—Ñ–æ—Ä —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
    
    updateStatus();
    
    addAutoModeButton();
    
    updateInstructions();
    
    document.addEventListener('keydown', handleKeyPress);
}

document.addEventListener('DOMContentLoaded', initTrafficLight);

window.addEventListener('beforeunload', function() {
    if (autoModeInterval) {
        clearInterval(autoModeInterval);
    }
});

if (typeof module !== 'undefined' && module.exports) {
    module.exports = {
        switchLight,
        startAutoMode,
        stopAutoMode,
        toggleAutoMode,
        resetToRed,
        colors,
        colorNames
    };
}